services:
  adguard:
    image: adguard/adguardhome:v0.107.57
    container_name: adguard
    hostname: rpi2
    restart: unless-stopped
    network_mode: host
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adguard.rule=Host(`adguard-rpi2.ucdialplans.com`)"
      - "traefik.http.routers.adguard.entrypoints=websecure"
      - "traefik.http.routers.adguard.tls=true"
      - "traefik.http.routers.adguard.tls.certresolver=letsencrypt"
      - "traefik.http.services.adguard.loadbalancer.server.port=3000"
    volumes:
      - ./adguard/conf:/opt/adguardhome/conf
      - ./adguard/work:/opt/adguardhome/work


  portainer-agent:
    container_name: portainer-agent
    image: portainer/agent:2.27.1
    restart: always
    ports:
      - 9001:9001    
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes


# For Spotify Player to work via Docker, BT must be disabled on host
# For disabling Bluetooth on RPi2 for Spotify Docker container:
# sudo killall -9 bluetoothd && sudo systemctl disable bluetooth.service && sudo systemctl disable bluetooth.target
  spotify-player:
    container_name: spotify-player
    image: registry.ucdialplans.com/spotify-player:latest
    restart: always
    network_mode: host
    cap_add:
      - NET_ADMIN


  traefik:
    container_name: traefik
    image: traefik:v3.3.3
    restart: always
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --providers.docker=true
      - --api.dashboard=true
      - --log.level=INFO
      - --log.filePath=/var/log/traefik.log
      # Set up LetsEncrypt
      - --certificatesresolvers.letsencrypt.acme.dnschallenge=true
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.letsencrypt.acme.email=ken.lasko@gmail.com
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      # Set up an insecure listener that redirects all traffic to TLS
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.websecure.address=:443
      # Set up the TLS configuration for our websecure listener
      - --entrypoints.websecure.http.tls=true
      - --entrypoints.websecure.http.tls.certResolver=letsencrypt
      - --entrypoints.websecure.http.tls.domains[0].main=*.ucdialplans.com
    environment:
      - CLOUDFLARE_EMAIL=ken.lasko@gmail.com
      - CLOUDFLARE_DNS_API_TOKEN=***REMOVED***
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./certs:/letsencrypt"
      - "./traefik/logs/traefik.log:/var/log/traefik.log"
    labels:
      # Dashboard
      - "traefik.enable=true"
      - 'traefik.http.routers.traefik.rule=Host(`traefik-rpi2.ucdialplans.com`)'
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik.service=api@internal"
      - 'traefik.http.routers.traefik.middlewares=strip'
      - 'traefik.http.middlewares.strip.stripprefix.prefixes=/traefik'
      # middleware redirect
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    extra_hosts: 
      - host.docker.internal:172.18.0.1
    networks:
      - ipv6


  webhook-listener:
    image: alpine/socat
    container_name: webhook-listener
    command: >
        TCP-LISTEN:9000,reuseaddr,fork
        SYSTEM:"GIT_SSH_COMMAND='ssh -o StrictHostKeyChecking=no' cd /docker && git pull && docker compose up -d"
    volumes:
      - .:/app
      - /home/ken/.ssh:/root/.ssh  # Mount SSH keys
    restart: always


networks:
  ipv6:
    enable_ipv6: true
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.18.0.0/24
          gateway: 172.18.0.1
        - subnet: fe80::/64
          gateway: fe80::1

volumes:
  fifo:
